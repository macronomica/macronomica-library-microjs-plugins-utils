{"version":3,"sources":["../src/check-link.js"],"names":["client","clientName","property","value","hasMany","Array","isArray","exec","cmd","fields","criteria","id","in","then","code","result","Promise","reject","message","details","ids","map","diff","reduce","includes","push","length","join","catch","error"],"mappings":";;;;;;;;AAAA;;;;;;kBAEe,UAACA,MAAD,EAASC,UAAT,EAAqBC,QAArB,EAA+BC,KAA/B,EAAyC;AACtD,MAAMC,UAAUC,MAAMC,OAAN,CAAcH,KAAd,CAAhB;;AAEA,SAAOH,OACJO,IADI,CACC;AACJC,SAAUJ,UAAU,MAAV,GAAmB,KADzB;AAEJK,YAAU,CAAE,IAAF,CAFN;AAGJC,cAAU,EAAEC,IAAIP,UAAU,EAAEQ,IAAI,sBAAKT,KAAL,CAAN,EAAV,GAAgCA,KAAtC;AAHN,GADD,EAMJU,IANI,CAMC,kBAAU;AACd,QAAMC,kBAAiBb,UAAjB,qBAAN;;AAEA,QAAI,CAACG,OAAD,IAAYW,OAAQ,CAAR,EAAYJ,EAAZ,KAAmBR,KAAnC,EAA0C;AACxC,aAAOa,QAAQC,MAAR,CAAe;AACpBH,kBADoB;AAEpBI,8HAAqCf,KAFjB;AAGpBgB,iBAAShB;AAHW,OAAf,CAAP;AAKD;;AAED,QAAIC,OAAJ,EAAa;AAAA;AACX,YAAMgB,MAAML,OAAOM,GAAP,CAAW;AAAA,cAAGV,EAAH,QAAGA,EAAH;AAAA,iBAAYA,EAAZ;AAAA,SAAX,CAAZ;AACA,YAAMW,OAAOnB,MAAMoB,MAAN,CAAa,UAACD,IAAD,EAAOX,EAAP,EAAc;AACtC,cAAI,CAACS,IAAII,QAAJ,CAAab,EAAb,CAAL,EAAuB;AACrBW,iBAAKG,IAAL,CAAUd,EAAV;AACD;;AAED,iBAAOW,IAAP;AACD,SANY,EAMV,EANU,CAAb;;AAQA,YAAI,CAACA,KAAKI,MAAV,EAAkB;AAChB;AAAA;AAAA;AACD;;AAED;AAAA,aAAOV,QAAQC,MAAR,CAAe;AACpBH,sBADoB;AAEpBI,uHAA+BjB,UAA/B,qBAAsDqB,KAAKK,IAAL,CAAU,MAAV,CAAtD,MAFoB;AAGpBR,qBAASG;AAHW,WAAf;AAAP;AAdW;;AAAA;AAmBZ;AACF,GArCI,EAsCJM,KAtCI,CAsCE,iBAAS;AACd,WAAOZ,QAAQC,MAAR,CAAeY,KAAf,CAAP;AACD,GAxCI,CAAP;AAyCD,C","file":"check-link.js","sourcesContent":["import uniq from 'lodash.uniq';\n\nexport default (client, clientName, property, value) => {\n  const hasMany = Array.isArray(value);\n\n  return client\n    .exec({\n      cmd     : hasMany ? 'list' : 'one',\n      fields  : [ 'id' ],\n      criteria: { id: hasMany ? { in: uniq(value) } : value }\n    })\n    .then(result => {\n      const code = `error.${ clientName }.by.id.not.found`;\n\n      if (!hasMany && result[ 0 ].id !== value) {\n        return Promise.reject({\n          code,\n          message: `Не найдена запись с id: ${ value }`,\n          details: value\n        });\n      }\n\n      if (hasMany) {\n        const ids = result.map(({ id }) => id);\n        const diff = value.reduce((diff, id) => {\n          if (!ids.includes(id)) {\n            diff.push(id);\n          }\n\n          return diff;\n        }, []);\n\n        if (!diff.length) {\n          return;\n        }\n\n        return Promise.reject({\n          code,\n          message: `Не найдены записи ${ clientName } с id: \"${ diff.join('\", \"') }\"`,\n          details: diff\n        });\n      }\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n};"]}