{"version":3,"sources":["../../src/utils/config-client-to-object.js"],"names":["CONFIG_SECTION_CLIENTS","clients","has","get","name","value","trim","split","host","port","type","timeout"],"mappings":";;;;;;;;AAAA;;;;;;AACA,IAAMA,yBAAyB,SAA/B;;AAEA,IAAMC,UAAU,iBAAOC,GAAP,CAAWF,sBAAX,IACZ,iBAAOG,GAAP,CAAWH,sBAAX,CADY,GAEZ,EAFJ;;AAIA;;;;;kBAIe,UAACI,IAAD,EAAU;AAAA,MACNC,KADM,GACIJ,OADJ,CACbG,IADa;;AAAA,0BAEQC,MAAMC,IAAN,GAAaC,KAAb,CAAmB,GAAnB,CAFR;AAAA;AAAA;AAAA,MAEfC,IAFe,uCAERH,KAFQ;AAAA,MAEDI,IAFC;;AAIvB,SAAO;AACLL,cADK;AAELM,UAAS,MAFJ;AAGLF,cAHK,EAGCC,UAHD;AAILE,aAAS;AAJJ,GAAP;AAMD,C","file":"config-client-to-object.js","sourcesContent":["import config from 'config';\nconst CONFIG_SECTION_CLIENTS = 'clients';\n\nconst clients = config.has(CONFIG_SECTION_CLIENTS)\n  ? config.get(CONFIG_SECTION_CLIENTS)\n  : {};\n\n/**\n * @param {string} name\n * @returns {{type: *, pin: {role: *}, host, port, timeout: *}}\n */\nexport default (name) => {\n  const { [ name ]:value } = clients;\n  const [ host = value, port ] = value.trim().split(':');\n\n  return {\n    name,\n    type   : 'http',\n    host, port,\n    timeout: 2000\n  };\n};"]}